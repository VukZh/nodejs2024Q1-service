---
openapi: 3.0.0
paths:
  "/":
    get:
      operationId: getHello
      parameters: []
      responses:
        '200':
          description: ''
  "/user":
    get:
      operationId: getAllUsers
      parameters: []
      responses:
        '200':
          description: Users received
      tags:
        - user
    post:
      operationId: addUser
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateUserDto"
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreateUserDto"
        '400':
          description: User`s body does not contain required fields
      tags:
        - user
  "/user/{id}":
    get:
      operationId: getUser
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: User is retrieved by his id
        '400':
          description: User`s ID is invalid
        '404':
          description: User doesn`t exist
      tags:
        - user
    put:
      operationId: changeUser
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdatePasswordDto"
      responses:
        '200':
          description: User updated
        '400':
          description: User`s ID is invalid
        '403':
          description: User`s old password is wrong
        '404':
          description: User doesn`t exist
      tags:
        - user
    delete:
      operationId: deleteUser
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: User deleted
        '400':
          description: User`s ID is invalid
        '404':
          description: User doesn`t exist
      tags:
        - user
  "/artist":
    get:
      operationId: getAllArtists
      parameters: []
      responses:
        '200':
          description: Artists received
      tags:
        - artist
    post:
      operationId: addArtist
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ArtistDto"
      responses:
        '201':
          description: Artist created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ArtistDto"
        '400':
          description: Artist`s body does not contain required fields
      tags:
        - artist
  "/artist/{id}":
    get:
      operationId: getArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Artist is retrieved by his id
        '400':
          description: Artist`s ID is invalid
        '404':
          description: Artist doesn`t exist
      tags:
        - artist
    put:
      operationId: changeArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ArtistDto"
      responses:
        '200':
          description: Artist updated
        '400':
          description: Artist`s ID is invalid
        '404':
          description: Artist doesn`t exist
      tags:
        - artist
    delete:
      operationId: deleteArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Artist deleted
        '400':
          description: Artist`s ID is invalid
        '404':
          description: Artist doesn`t exist
      tags:
        - artist
  "/track":
    get:
      operationId: getAllTracks
      parameters: []
      responses:
        '200':
          description: Tracks received
      tags:
        - track
    post:
      operationId: addTrack
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TrackDto"
      responses:
        '201':
          description: Track created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TrackDto"
        '400':
          description: Track`s body does not contain required fields
      tags:
        - track
  "/track/{id}":
    get:
      operationId: getTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Track is retrieved by his id
        '400':
          description: Track`s ID is invalid
        '404':
          description: Track doesn`t exist
      tags:
        - track
    put:
      operationId: changeTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TrackDto"
      responses:
        '200':
          description: Track updated
        '400':
          description: Track`s ID is invalid
        '404':
          description: Track doesn`t exist
      tags:
        - track
    delete:
      operationId: deleteTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Track deleted
        '400':
          description: Track`s ID is invalid
        '404':
          description: Track doesn`t exist
      tags:
        - track
  "/album":
    get:
      operationId: getAllAlbums
      parameters: []
      responses:
        '200':
          description: Albums received
      tags:
        - album
    post:
      operationId: createAlbum
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AlbumDto"
      responses:
        '201':
          description: Album created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AlbumDto"
        '400':
          description: Album`s body does not contain required fields
      tags:
        - album
  "/album/{id}":
    get:
      operationId: getAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Album is retrieved by his id
        '400':
          description: Album`s ID is invalid
        '404':
          description: Album doesn`t exist
      tags:
        - album
    put:
      operationId: changeAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AlbumDto"
      responses:
        '200':
          description: Album updated
        '400':
          description: Album`s ID is invalid
        '404':
          description: Album doesn`t exist
      tags:
        - album
    delete:
      operationId: deleteAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Album deleted
        '400':
          description: Album`s ID is invalid
        '404':
          description: Album doesn`t exist
      tags:
        - album
  "/favs":
    get:
      operationId: getFavorites
      parameters: []
      responses:
        '200':
          description: Albums received
      tags:
        - favorites
  "/favs/track/{id}":
    post:
      operationId: addTrackToFavs
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: Track add to the favorites
        '400':
          description: Track`s ID is invalid
        '422':
          description: Track`s ID doesn"t exist
      tags:
        - favorites
    delete:
      operationId: deleteTrackFromFavs
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Track deleted from the favorites
        '400':
          description: Track`s ID is invalid
        '404':
          description: Track`s ID doesn"t exist in the favorites
      tags:
        - favorites
  "/favs/album/{id}":
    post:
      operationId: addAlbumToFavs
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: Album add to the favorites
        '400':
          description: Album`s ID is invalid
        '422':
          description: Album`s ID doesn"t exist
      tags:
        - favorites
    delete:
      operationId: deleteAlbumFromFavs
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Album deleted from the favorites
        '400':
          description: Album`s ID is invalid
        '404':
          description: Album`s ID doesn"t exist in the favorites
      tags:
        - favorites
  "/favs/artist/{id}":
    post:
      operationId: addArtistToFavs
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: Artist add to the favorites
        '400':
          description: Artist`s ID is invalid
        '422':
          description: Artist`s ID doesn"t exist
      tags:
        - favorites
    delete:
      operationId: deleteArtistFromFavs
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Artist deleted from the favorites
        '400':
          description: Artist`s ID is invalid
        '404':
          description: Artist`s ID doesn"t exist in the favorites
      tags:
        - favorites
info:
  title: NodeJS API
  description: The NodeJS 2024 Q1 service API
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  schemas:
    CreateUserDto:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
      required:
        - login
        - password
    UpdatePasswordDto:
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
      required:
        - oldPassword
        - newPassword
    ArtistDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        grammy:
          type: boolean
      required:
        - id
        - name
        - grammy
    TrackDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        artistId:
          type: string
        albumId:
          type: string
        duration:
          type: number
      required:
        - id
        - name
        - duration
    AlbumDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        year:
          type: number
        artistId:
          type: string
      required:
        - id
        - name
        - year
